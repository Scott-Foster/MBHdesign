
.First <- function () 
{
  .libPaths(c("/home/fos085/lib/R/library",.libPaths()))
  if( interactive()){
    #set the repos
    r <- getOption("repos")
    r["CRAN"] <- "https://cran.ms.unimelb.edu.au"
    r <- unique( c( mvb='https://markbravington.github.com/Rmvb-repo', r))
    options(repos = r)
    
    if( !require( debug)){
      install.packages( "debug", lib="~/lib/R/library")
      library( debug)
    }
    options( debug.font = "Courier 10", debug.height = 25, debug.screen.pos = "-5+4", abbreviate.cdprompt = 1)
    
    options(warn = 1)
    options(download.file.method = "wget")

    if( !require( statquotes)){
      install.packages( "statquotes", lib="~/lib/R/library")
      library( statquotes)
    }
    print( statquote())
    if( !require( randquotes)){
      install.packages( "randquotes", lib="~/lib/R/library")
      library( randquotes)
    }
    cat("\n",randquotes::randquote_simple(),"\n\n")
  }
  #  library(MASS)
  #  options(help_type = "html")
  #  options(browser = "chromium-browser")# --new-window")#kfmclient newTab")
  #  options( width=120) #double the default
  #  library(mvbutils)
  #  options(program.editor = function(name, fname) paste("gedit", 
  #                                                       fname, "", sep = " "), edit.scratchdir = "~/.Rfiles/scratch", 
  #          backup.fix = c(4, 6))
  
}

lso <- function( name=NULL, all.names=FALSE) 
{
  if( is.null( name))
    name <- parent.env( environment())
  lis <- ls(name, all.names=all.names)
  
  tmp <- sapply( lis, function(x){ class(eval(parse(text=x),name)) } )
  tmp <- tmp=="function"
  
  list( FUNCTIONS=lis[tmp], OTHERS=lis[!tmp])
}

clean.tcl <- function () 
{
  print( "turning OFF tracing")
  mtrace.off()
  detach( "package:debug", unload=T)
  detach( "package:tcltk", unload=T)
  library( "tcltk")
  library( "debug")
}

.Last <- function () 
{
  if( interactive()){
    cat("\n\nTTFN -- Ta Ta For Now\n\n")
    print("See you again next time")
  }
}


